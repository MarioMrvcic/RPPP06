// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPPP06.Data;

#nullable disable

namespace RPPP06.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20231112223405_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.Property<int>("DokumentacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DokumentacijaId"));

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivDokumentacije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<string>("StatusDovršenosti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeKreacije")
                        .HasColumnType("datetime2");

                    b.HasKey("DokumentacijaId");

                    b.HasIndex("ProjektId")
                        .IsUnique();

                    b.ToTable("Dokumentacija");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.DokumentacijaVrstaDokumentacije", b =>
                {
                    b.Property<int>("DokumentacijaId")
                        .HasColumnType("int");

                    b.Property<int>("VrstaDokumentacijeId")
                        .HasColumnType("int");

                    b.HasKey("DokumentacijaId", "VrstaDokumentacijeId");

                    b.HasIndex("VrstaDokumentacijeId");

                    b.ToTable("DokumentacijaVrstaDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Naručitelj", b =>
                {
                    b.Property<int>("OIB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OIB"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iban")
                        .HasColumnType("int");

                    b.Property<int?>("Kontakt")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OIB");

                    b.ToTable("Naručitelj");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Ugovor", b =>
                {
                    b.Property<int>("UgovorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UgovorId"));

                    b.Property<int>("DokumentacijaId")
                        .HasColumnType("int");

                    b.Property<int>("IbanIsporučitelja")
                        .HasColumnType("int");

                    b.Property<int>("IbanNaručitelja")
                        .HasColumnType("int");

                    b.Property<int>("NaručiteljOIB")
                        .HasColumnType("int");

                    b.HasKey("UgovorId");

                    b.HasIndex("DokumentacijaId")
                        .IsUnique();

                    b.HasIndex("NaručiteljOIB");

                    b.ToTable("Ugovor");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.VrstaDokumentacije", b =>
                {
                    b.Property<int>("VrstaDokumentacijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaDokumentacijeId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VrstaDokumentacijeId");

                    b.ToTable("VrstaDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.Projekt", b =>
                {
                    b.Property<int>("ProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjektId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kratica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlaniraniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlaniraniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StvarniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StvarniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<int>("VrstaProjektaId")
                        .HasColumnType("int");

                    b.HasKey("ProjektId");

                    b.HasIndex("VrstaProjektaId");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.VrstaProjekta", b =>
                {
                    b.Property<int>("VrstaProjektaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaProjektaId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VrstaProjektaId");

                    b.ToTable("VrstaProjekta");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Posao", b =>
                {
                    b.Property<int>("PosaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosaoId"));

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuradnikEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("VrijemeKrajaRada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemePočetkaRada")
                        .HasColumnType("datetime2");

                    b.Property<int>("VrstaPoslaId")
                        .HasColumnType("int");

                    b.Property<int>("ZadatakId")
                        .HasColumnType("int");

                    b.HasKey("PosaoId");

                    b.HasIndex("SuradnikEmail");

                    b.HasIndex("VrstaPoslaId");

                    b.HasIndex("ZadatakId");

                    b.ToTable("Posao");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BrojTelefona")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MjestoStanovanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NadređeniEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.HasIndex("NadređeniEmail");

                    b.ToTable("Suradnik");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.SuradnikProjekt", b =>
                {
                    b.Property<string>("SuradnikEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.HasKey("SuradnikEmail", "ProjektId");

                    b.HasIndex("ProjektId");

                    b.ToTable("SuradnikProjekt");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.SuradnikUloga", b =>
                {
                    b.Property<string>("SuradnikEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("SuradnikEmail", "UlogaId");

                    b.HasIndex("UlogaId");

                    b.ToTable("SuradnikUloga");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.VrstaPosla", b =>
                {
                    b.Property<int>("VrstaPoslaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaPoslaId"));

                    b.Property<int>("Ime")
                        .HasColumnType("int");

                    b.HasKey("VrstaPoslaId");

                    b.ToTable("VrstaPosla");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.ProjektnaKartica", b =>
                {
                    b.Property<int>("ProjektnaKarticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjektnaKarticaId"));

                    b.Property<string>("Banka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iban")
                        .HasColumnType("int");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<double>("Stanje")
                        .HasColumnType("float");

                    b.HasKey("ProjektnaKarticaId");

                    b.HasIndex("ProjektId");

                    b.ToTable("ProjektnaKartica");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.Transakcija", b =>
                {
                    b.Property<int>("TransakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransakcijaId"));

                    b.Property<int>("IbanIsporučitelja")
                        .HasColumnType("int");

                    b.Property<int>("IbanPrimatelja")
                        .HasColumnType("int");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<int?>("ProjektnaKarticaIsporučiteljId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjektnaKarticaPrimateljId")
                        .HasColumnType("int");

                    b.Property<int>("VrstaTransakcijeId")
                        .HasColumnType("int");

                    b.HasKey("TransakcijaId");

                    b.HasIndex("ProjektnaKarticaIsporučiteljId");

                    b.HasIndex("ProjektnaKarticaPrimateljId");

                    b.HasIndex("VrstaTransakcijeId");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.VrstaTransakcije", b =>
                {
                    b.Property<int>("VrstaTransakcijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaTransakcijeId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VrstaTransakcijeId");

                    b.ToTable("VrstaTransakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZastavicaAktivnosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Zadatak", b =>
                {
                    b.Property<int>("ZadatakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZadatakId"));

                    b.Property<string>("NositeljEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OpisZadatka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlaniraniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlaniraniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StvarniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StvarniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZahtjevId")
                        .HasColumnType("int");

                    b.HasKey("ZadatakId");

                    b.HasIndex("NositeljEmail");

                    b.HasIndex("StatusId");

                    b.HasIndex("ZahtjevId");

                    b.ToTable("Zadatak");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Aktivnost", b =>
                {
                    b.Property<int>("AktivnostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AktivnostId"));

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AktivnostId");

                    b.HasIndex("EtapaId");

                    b.ToTable("Aktivnost");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Etapa", b =>
                {
                    b.Property<int>("EtapaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtapaId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanProjektaId")
                        .HasColumnType("int");

                    b.HasKey("EtapaId");

                    b.HasIndex("PlanProjektaId");

                    b.ToTable("Etapa");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.Property<int>("PlanProjektaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanProjektaId"));

                    b.Property<DateTime>("PlaniraniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlaniraniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StvarniKraj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StvarniPočetak")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoditeljEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlanProjektaId");

                    b.HasIndex("ProjektId")
                        .IsUnique();

                    b.HasIndex("VoditeljEmail");

                    b.ToTable("PlanProjekta");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Prioritet", b =>
                {
                    b.Property<int>("PrioritetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrioritetId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrioritetId");

                    b.ToTable("Prioritet");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.TipZahtjeva", b =>
                {
                    b.Property<int>("TipZahtjevaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipZahtjevaId"));

                    b.Property<int>("Ime")
                        .HasColumnType("int");

                    b.HasKey("TipZahtjevaId");

                    b.ToTable("TipZahtjeva");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.Property<int>("ZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZahtjevId"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanProjektaId")
                        .HasColumnType("int");

                    b.Property<int>("PrioritetId")
                        .HasColumnType("int");

                    b.Property<int>("TipZahtjevaId")
                        .HasColumnType("int");

                    b.HasKey("ZahtjevId");

                    b.HasIndex("PlanProjektaId");

                    b.HasIndex("PrioritetId");

                    b.HasIndex("TipZahtjevaId");

                    b.ToTable("Zahtjev");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithOne("Dokumentacija")
                        .HasForeignKey("RPPP06.Models.Dokumenti.Dokumentacija", "ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.DokumentacijaVrstaDokumentacije", b =>
                {
                    b.HasOne("RPPP06.Models.Dokumenti.Dokumentacija", "Dokumentacija")
                        .WithMany("VrsteDokumentacije")
                        .HasForeignKey("DokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Dokumenti.VrstaDokumentacije", "VrstaDokumentacije")
                        .WithMany("Dokumentacija")
                        .HasForeignKey("VrstaDokumentacijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumentacija");

                    b.Navigation("VrstaDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Ugovor", b =>
                {
                    b.HasOne("RPPP06.Models.Dokumenti.Dokumentacija", "Dokumentacija")
                        .WithOne("Ugovor")
                        .HasForeignKey("RPPP06.Models.Dokumenti.Ugovor", "DokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Dokumenti.Naručitelj", "Naručitelj")
                        .WithMany("Ugovori")
                        .HasForeignKey("NaručiteljOIB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumentacija");

                    b.Navigation("Naručitelj");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.Projekt", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.VrstaProjekta", "VrstaProjekta")
                        .WithMany("Projekti")
                        .HasForeignKey("VrstaProjektaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VrstaProjekta");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Posao", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Poslovi")
                        .HasForeignKey("SuradnikEmail")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.VrstaPosla", "VrstaPosla")
                        .WithMany("Poslovi")
                        .HasForeignKey("VrstaPoslaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.ZadatciF.Zadatak", "Zadatak")
                        .WithMany("Poslovi")
                        .HasForeignKey("ZadatakId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suradnik");

                    b.Navigation("VrstaPosla");

                    b.Navigation("Zadatak");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Nadređeni")
                        .WithMany()
                        .HasForeignKey("NadređeniEmail");

                    b.Navigation("Nadređeni");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.SuradnikProjekt", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithMany("Suradnici")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Projekti")
                        .HasForeignKey("SuradnikEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");

                    b.Navigation("Suradnik");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.SuradnikUloga", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Uloge")
                        .HasForeignKey("SuradnikEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.Uloga", "Uloga")
                        .WithMany("Suradnici")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suradnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.ProjektnaKartica", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithMany("ProjektneKartice")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.Transakcija", b =>
                {
                    b.HasOne("RPPP06.Models.Transakcije.ProjektnaKartica", "ProjektnaKarticaIsporučitelj")
                        .WithMany()
                        .HasForeignKey("ProjektnaKarticaIsporučiteljId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RPPP06.Models.Transakcije.ProjektnaKartica", "ProjektnaKarticaPrimatelj")
                        .WithMany()
                        .HasForeignKey("ProjektnaKarticaPrimateljId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RPPP06.Models.Transakcije.VrstaTransakcije", "VrstaTransakcije")
                        .WithMany("Transakcije")
                        .HasForeignKey("VrstaTransakcijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjektnaKarticaIsporučitelj");

                    b.Navigation("ProjektnaKarticaPrimatelj");

                    b.Navigation("VrstaTransakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Zadatak", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Nositelj")
                        .WithMany("Zadatci")
                        .HasForeignKey("NositeljEmail");

                    b.HasOne("RPPP06.Models.ZadatciF.Status", "Status")
                        .WithMany("Zadatci")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.Zahtjev", "Zahtjev")
                        .WithMany("Zadatci")
                        .HasForeignKey("ZahtjevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nositelj");

                    b.Navigation("Status");

                    b.Navigation("Zahtjev");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Aktivnost", b =>
                {
                    b.HasOne("RPPP06.Models.Zahtjevi.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etapa");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Etapa", b =>
                {
                    b.HasOne("RPPP06.Models.Zahtjevi.PlanProjekta", "PlanProjekta")
                        .WithMany("Etape")
                        .HasForeignKey("PlanProjektaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanProjekta");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithOne("PlanProjekta")
                        .HasForeignKey("RPPP06.Models.Zahtjevi.PlanProjekta", "ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Voditelj")
                        .WithMany("PlanoviProjekta")
                        .HasForeignKey("VoditeljEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");

                    b.Navigation("Voditelj");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.HasOne("RPPP06.Models.Zahtjevi.PlanProjekta", "PlanProjekta")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("PlanProjektaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.Prioritet", "Prioritet")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("PrioritetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.TipZahtjeva", "TipZahtjeva")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("TipZahtjevaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanProjekta");

                    b.Navigation("Prioritet");

                    b.Navigation("TipZahtjeva");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.Navigation("Ugovor")
                        .IsRequired();

                    b.Navigation("VrsteDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Naručitelj", b =>
                {
                    b.Navigation("Ugovori");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.VrstaDokumentacije", b =>
                {
                    b.Navigation("Dokumentacija");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.Projekt", b =>
                {
                    b.Navigation("Dokumentacija");

                    b.Navigation("PlanProjekta")
                        .IsRequired();

                    b.Navigation("ProjektneKartice");

                    b.Navigation("Suradnici");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.VrstaProjekta", b =>
                {
                    b.Navigation("Projekti");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.Navigation("PlanoviProjekta");

                    b.Navigation("Poslovi");

                    b.Navigation("Projekti");

                    b.Navigation("Uloge");

                    b.Navigation("Zadatci");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Uloga", b =>
                {
                    b.Navigation("Suradnici");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.VrstaPosla", b =>
                {
                    b.Navigation("Poslovi");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.VrstaTransakcije", b =>
                {
                    b.Navigation("Transakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Status", b =>
                {
                    b.Navigation("Zadatci");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Zadatak", b =>
                {
                    b.Navigation("Poslovi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.Navigation("Etape");

                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Prioritet", b =>
                {
                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.TipZahtjeva", b =>
                {
                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.Navigation("Zadatci");
                });
#pragma warning restore 612, 618
        }
    }
}
