// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPPP06.Data;

#nullable disable

namespace RPPP06.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20231111224841_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPPP06.Models.Dokumenti.DijeliSeNa", b =>
                {
                    b.Property<int>("DokumentacijaId")
                        .HasColumnType("int");

                    b.Property<int>("VrstaDokumentacijeId")
                        .HasColumnType("int");

                    b.HasKey("DokumentacijaId", "VrstaDokumentacijeId");

                    b.HasIndex("VrstaDokumentacijeId");

                    b.ToTable("DijeliSeNa");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dokumentacija");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Format");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.ImaSvoj", b =>
                {
                    b.Property<int>("DokumentacijaId")
                        .HasColumnType("int");

                    b.Property<int>("FormatId")
                        .HasColumnType("int");

                    b.HasKey("DokumentacijaId", "FormatId");

                    b.HasIndex("FormatId");

                    b.ToTable("ImaSvoj");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Naručitelj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Naručitelj");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Ugovor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("NaručiteljId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NaručiteljId");

                    b.ToTable("Ugovor");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.VrstaDokumentacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("VrstaDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.Projekt", b =>
                {
                    b.Property<int>("SifProjekt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SifProjekt"));

                    b.HasKey("SifProjekt");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.EvidencijaRadnogVremena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SuradnikOIB")
                        .HasColumnType("int");

                    b.Property<int>("VrstaPoslaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuradnikOIB");

                    b.HasIndex("VrstaPoslaId");

                    b.ToTable("EvidencijaRadnogVremena");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Ima", b =>
                {
                    b.Property<int>("SuradnikOIB")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("SuradnikOIB", "UlogaId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Ima");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.RadeNa", b =>
                {
                    b.Property<int>("SuradnikOIB")
                        .HasColumnType("int");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.HasKey("SuradnikOIB", "ProjektId");

                    b.HasIndex("ProjektId");

                    b.ToTable("RadeNa");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.Property<int>("OIB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OIB"));

                    b.Property<int?>("SuradnikOIB")
                        .HasColumnType("int");

                    b.HasKey("OIB");

                    b.HasIndex("SuradnikOIB");

                    b.ToTable("Suradnik");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.VrstaPosla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("VrstaPosla");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.ProjektnaKartica", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Banka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjektnaKartica");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.Transakcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjektnaKarticaId")
                        .HasColumnType("int");

                    b.Property<int>("VrstaTransakcijeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjektnaKarticaId");

                    b.HasIndex("VrstaTransakcijeId");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.VrstaTransakcije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("VrstaTransakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Nositelj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Nositelj");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ZastavicaAktivnostiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZastavicaAktivnostiId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Zadatak", b =>
                {
                    b.Property<int>("ŠifZad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ŠifZad"));

                    b.Property<int>("NositeljId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("SuradnikOIB")
                        .HasColumnType("int");

                    b.Property<int>("ZahtjevŠifZahtjeva")
                        .HasColumnType("int");

                    b.HasKey("ŠifZad");

                    b.HasIndex("NositeljId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SuradnikOIB");

                    b.HasIndex("ZahtjevŠifZahtjeva");

                    b.ToTable("Zadatak");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.ZastavicaAktivnosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ZastavicaAktivnosti");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlanProjekta");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Prioritet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Prioritet");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.TipZahtjeva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TipZahtjeva");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.Property<int>("ŠifZahtjeva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ŠifZahtjeva"));

                    b.Property<int>("PlanProjektaId")
                        .HasColumnType("int");

                    b.Property<int>("PrioritetId")
                        .HasColumnType("int");

                    b.Property<int>("TipZahtjevaId")
                        .HasColumnType("int");

                    b.HasKey("ŠifZahtjeva");

                    b.HasIndex("PlanProjektaId");

                    b.HasIndex("PrioritetId");

                    b.HasIndex("TipZahtjevaId");

                    b.ToTable("Zahtjev");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.DijeliSeNa", b =>
                {
                    b.HasOne("RPPP06.Models.Dokumenti.Dokumentacija", "Dokumentacija")
                        .WithMany("VrsteDokumentacije")
                        .HasForeignKey("DokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Dokumenti.VrstaDokumentacije", "VrstaDokumentacije")
                        .WithMany("Dokumentacije")
                        .HasForeignKey("VrstaDokumentacijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumentacija");

                    b.Navigation("VrstaDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithOne("Dokumentacija")
                        .HasForeignKey("RPPP06.Models.Dokumenti.Dokumentacija", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.ImaSvoj", b =>
                {
                    b.HasOne("RPPP06.Models.Dokumenti.Dokumentacija", "Dokumentacija")
                        .WithMany("Formati")
                        .HasForeignKey("DokumentacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Dokumenti.Format", "Format")
                        .WithMany("Dokumentacije")
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumentacija");

                    b.Navigation("Format");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Ugovor", b =>
                {
                    b.HasOne("RPPP06.Models.Dokumenti.Dokumentacija", "Dokumentacija")
                        .WithOne("Ugovor")
                        .HasForeignKey("RPPP06.Models.Dokumenti.Ugovor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Dokumenti.Naručitelj", "Naručitelj")
                        .WithMany("Ugovori")
                        .HasForeignKey("NaručiteljId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokumentacija");

                    b.Navigation("Naručitelj");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.EvidencijaRadnogVremena", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("EvidencijeRadnogVremena")
                        .HasForeignKey("SuradnikOIB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.VrstaPosla", "VrstaPosla")
                        .WithMany("EvidencijaRadnogVremena")
                        .HasForeignKey("VrstaPoslaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suradnik");

                    b.Navigation("VrstaPosla");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Ima", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Uloga", "Uloga")
                        .WithMany("Suradnici")
                        .HasForeignKey("SuradnikOIB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Uloge")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suradnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.RadeNa", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Projekti")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithMany("Suradnici")
                        .HasForeignKey("SuradnikOIB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");

                    b.Navigation("Suradnik");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", null)
                        .WithMany("Nadređeni")
                        .HasForeignKey("SuradnikOIB");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.ProjektnaKartica", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithOne("ProjektnaKartica")
                        .HasForeignKey("RPPP06.Models.Transakcije.ProjektnaKartica", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.Transakcija", b =>
                {
                    b.HasOne("RPPP06.Models.Transakcije.ProjektnaKartica", "ProjektnaKartica")
                        .WithMany("Transakcije")
                        .HasForeignKey("ProjektnaKarticaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Transakcije.VrstaTransakcije", "VrstaTransakcije")
                        .WithMany("Transakcije")
                        .HasForeignKey("VrstaTransakcijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjektnaKartica");

                    b.Navigation("VrstaTransakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Status", b =>
                {
                    b.HasOne("RPPP06.Models.ZadatciF.ZastavicaAktivnosti", "ZastavicaAktivnosti")
                        .WithMany("Statusi")
                        .HasForeignKey("ZastavicaAktivnostiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZastavicaAktivnosti");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Zadatak", b =>
                {
                    b.HasOne("RPPP06.Models.ZadatciF.Nositelj", "Nositelj")
                        .WithMany("Zadatci")
                        .HasForeignKey("NositeljId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.ZadatciF.Status", "Status")
                        .WithMany("Zadatci")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.SuradniciF.Suradnik", "Suradnik")
                        .WithMany("Zadatci")
                        .HasForeignKey("SuradnikOIB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.Zahtjev", "Zahtjev")
                        .WithMany("Zadatci")
                        .HasForeignKey("ZahtjevŠifZahtjeva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nositelj");

                    b.Navigation("Status");

                    b.Navigation("Suradnik");

                    b.Navigation("Zahtjev");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.HasOne("RPPP06.Models.Projekti.Projekt", "Projekt")
                        .WithOne("PlanProjekta")
                        .HasForeignKey("RPPP06.Models.Zahtjevi.PlanProjekta", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.HasOne("RPPP06.Models.Zahtjevi.PlanProjekta", "PlanProjekta")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("PlanProjektaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.Prioritet", "Prioritet")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("PrioritetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPPP06.Models.Zahtjevi.TipZahtjeva", "TipZahtjeva")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("TipZahtjevaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanProjekta");

                    b.Navigation("Prioritet");

                    b.Navigation("TipZahtjeva");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Dokumentacija", b =>
                {
                    b.Navigation("Formati");

                    b.Navigation("Ugovor")
                        .IsRequired();

                    b.Navigation("VrsteDokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Format", b =>
                {
                    b.Navigation("Dokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.Naručitelj", b =>
                {
                    b.Navigation("Ugovori");
                });

            modelBuilder.Entity("RPPP06.Models.Dokumenti.VrstaDokumentacije", b =>
                {
                    b.Navigation("Dokumentacije");
                });

            modelBuilder.Entity("RPPP06.Models.Projekti.Projekt", b =>
                {
                    b.Navigation("Dokumentacija")
                        .IsRequired();

                    b.Navigation("PlanProjekta")
                        .IsRequired();

                    b.Navigation("ProjektnaKartica")
                        .IsRequired();

                    b.Navigation("Suradnici");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Suradnik", b =>
                {
                    b.Navigation("EvidencijeRadnogVremena");

                    b.Navigation("Nadređeni");

                    b.Navigation("Projekti");

                    b.Navigation("Uloge");

                    b.Navigation("Zadatci");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.Uloga", b =>
                {
                    b.Navigation("Suradnici");
                });

            modelBuilder.Entity("RPPP06.Models.SuradniciF.VrstaPosla", b =>
                {
                    b.Navigation("EvidencijaRadnogVremena");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.ProjektnaKartica", b =>
                {
                    b.Navigation("Transakcije");
                });

            modelBuilder.Entity("RPPP06.Models.Transakcije.VrstaTransakcije", b =>
                {
                    b.Navigation("Transakcije");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Nositelj", b =>
                {
                    b.Navigation("Zadatci");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.Status", b =>
                {
                    b.Navigation("Zadatci");
                });

            modelBuilder.Entity("RPPP06.Models.ZadatciF.ZastavicaAktivnosti", b =>
                {
                    b.Navigation("Statusi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.PlanProjekta", b =>
                {
                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Prioritet", b =>
                {
                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.TipZahtjeva", b =>
                {
                    b.Navigation("Zahtjevi");
                });

            modelBuilder.Entity("RPPP06.Models.Zahtjevi.Zahtjev", b =>
                {
                    b.Navigation("Zadatci");
                });
#pragma warning restore 612, 618
        }
    }
}
